{"ast":null,"code":"var _jsxFileName = \"/home/arjun/code/react/graphql-react-event-booking/frontend/src/pages/Events.js\";\nimport React, { Component, Fragment, createRef } from 'react';\nimport './Events.css';\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport AuthContext from '../context/auth-context';\n\nclass EventsPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      creating: false\n    };\n\n    this.startCreateEventHandler = () => {\n      this.setState({\n        creating: true\n      });\n    };\n\n    this.modalConfirmHandler = () => {\n      this.setState({\n        creating: false\n      });\n      const title = this.titleElRef.current.value;\n      const price = +this.priceElRef.current.value;\n      const date = this.dateElRef.current.value;\n      const description = this.descriptionElRef.current.value;\n\n      if (title.trim().length === 0 || price <= 0 || date.trim().length === 0 || description.trim().length === 0) {\n        return;\n      }\n\n      const event = {\n        title,\n        price,\n        date,\n        description\n      };\n      console.log(event);\n      const requestBody = {\n        query: \"\\n        mutation {\\n          createEvent(eventInput: {title: \\\"\".concat(title, \"\\\", description: \\\"\").concat(description, \"\\\", price: \").concat(price, \", date: \\\"\").concat(date, \"\\\"}) {\\n            _id\\n            title\\n            description\\n            date\\n            price\\n            creator{\\n              _id\\n              email\\n            }\\n          }\\n        }\\n      \")\n      };\n      const token = this.context.token;\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': 'Bearer ' + token\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.modalCancelHandler = () => {\n      this.setState({\n        creating: false\n      });\n    };\n\n    this.titleElRef = createRef();\n    this.priceElRef = createRef();\n    this.dateElRef = createRef();\n    this.descriptionElRef = createRef();\n  }\n\n  render() {\n    return React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.creating && React.createElement(Backdrop, {\n      onCancel: this.modalCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.state.creating && React.createElement(Modal, {\n      title: \"Add Event\",\n      canCancel: true,\n      canConfirm: true,\n      onCancel: this.modalCancelHandler,\n      onConfirm: this.modalConfirmHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \"Title\"), React.createElement(\"input\", {\n      type: \"text\",\n      id: \"title\",\n      ref: this.titleElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"price\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"Price\"), React.createElement(\"input\", {\n      type: \"number\",\n      id: \"price\",\n      ref: this.priceElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, \"Date\"), React.createElement(\"input\", {\n      type: \"datetime-local\",\n      id: \"date\",\n      ref: this.dateElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, \"Description\"), React.createElement(\"textarea\", {\n      id: \"description\",\n      rows: \"4\",\n      ref: this.descriptionElRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"events-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, \"Share your own Events\"), React.createElement(\"button\", {\n      className: \"btn\",\n      onClick: this.startCreateEventHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, \"Create Event\")));\n  }\n\n}\n\nEventsPage.contextType = AuthContext;\nexport default EventsPage;","map":{"version":3,"sources":["/home/arjun/code/react/graphql-react-event-booking/frontend/src/pages/Events.js"],"names":["React","Component","Fragment","createRef","Modal","Backdrop","AuthContext","EventsPage","constructor","props","state","creating","startCreateEventHandler","setState","modalConfirmHandler","title","titleElRef","current","value","price","priceElRef","date","dateElRef","description","descriptionElRef","trim","length","event","console","log","requestBody","query","token","context","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","catch","err","modalCancelHandler","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component, Fragment, createRef } from 'react'\nimport './Events.css';\nimport Modal from '../components/Modal/Modal';\nimport Backdrop from '../components/Backdrop/Backdrop';\nimport AuthContext from '../context/auth-context';\n\nclass EventsPage extends Component {\n state = {\n   creating: false\n };\n\n static contextType=AuthContext;\n\n constructor(props){\n   super(props);\n   this.titleElRef = createRef();\n   this.priceElRef = createRef();\n   this.dateElRef = createRef();\n   this.descriptionElRef = createRef();\n }\n startCreateEventHandler = () => {\n  this.setState({ creating: true });\n }\n\n modalConfirmHandler = () => {\n  this.setState({ creating: false });\n  const title = this.titleElRef.current.value;\n  const price = +this.priceElRef.current.value;\n  const date = this.dateElRef.current.value;\n  const description = this.descriptionElRef.current.value;\n\n  if(\n    title.trim().length === 0 ||\n    price <= 0 ||\n    date.trim().length === 0 ||\n    description.trim().length === 0\n  ){\n    return;\n  }\n  const event = {title, price, date, description };\n  console.log(event);\n\n   const requestBody = {\n      query: `\n        mutation {\n          createEvent(eventInput: {title: \"${title}\", description: \"${description}\", price: ${price}, date: \"${date}\"}) {\n            _id\n            title\n            description\n            date\n            price\n            creator{\n              _id\n              email\n            }\n          }\n        }\n      `\n    };\n\n  const token = this.context.token;\n\n  fetch('http://localhost:8000/graphql', {\n    method: 'POST',\n    body: JSON.stringify(requestBody),\n    headers: {\n      'Content-Type': 'application/json',\n      'Authorization': 'Bearer ' + token\n    }\n  })\n    .then(res => {\n      if (res.status !== 200 && res.status !== 201) {\n        throw new Error('Failed!');\n      }\n      return res.json();\n    })\n    .then(resData => {\n      console.log(resData);\n    })\n    .catch(err => {\n      console.log(err);\n    });\n }\n\n modalCancelHandler = () => {\n  this.setState({ creating: false });\n }\n\n render() {\n  return (\n   <Fragment>\n    {this.state.creating && <Backdrop onCancel={this.modalCancelHandler} />}\n    {this.state.creating && \n    <Modal title=\"Add Event\" canCancel canConfirm\n                 onCancel={this.modalCancelHandler} \n                 onConfirm={this.modalConfirmHandler} >\n     <form>\n\n       <div className=\"form-control\">\n          <label htmlFor=\"title\">Title</label>\n          <input type=\"text\" id=\"title\" ref={this.titleElRef} />\n       </div>\n\n       <div className=\"form-control\">\n          <label htmlFor=\"price\">Price</label>\n          <input type=\"number\" id=\"price\" ref={this.priceElRef} />\n       </div>\n\n       <div className=\"form-control\">\n          <label htmlFor=\"date\">Date</label>\n          <input type=\"datetime-local\" id=\"date\" ref={this.dateElRef} />\n       </div>\n\n       <div className=\"form-control\">\n          <label htmlFor=\"description\">Description</label>\n          <textarea id=\"description\" rows=\"4\" ref={this.descriptionElRef} />\n       </div>\n\n     </form>\n    </Modal>\n  }\n    <div className=\"events-control\">\n      <p>Share your own Events</p>\n      <button className=\"btn\" onClick={this.startCreateEventHandler}>Create Event</button>\n    </div>\n   </Fragment>\n  )\n }\n}\nexport default EventsPage;"]},"metadata":{},"sourceType":"module"}