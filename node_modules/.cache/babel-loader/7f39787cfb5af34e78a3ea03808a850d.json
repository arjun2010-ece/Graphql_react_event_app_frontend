{"ast":null,"code":"var _jsxFileName = \"/home/arjun/code/react/graphql-react-event-booking/frontend/src/pages/Auth.js\";\nimport React, { Component } from 'react';\nimport AuthContext from '../context/auth-context';\nimport './Auth.css';\n\nclass AuthPage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLogin: true\n    };\n\n    this.switchModeHandler = () => {\n      this.setState(prevState => {\n        return {\n          isLogin: !prevState.isLogin\n        };\n      });\n    };\n\n    this.submitHandler = event => {\n      event.preventDefault();\n      const email = this.emailEl.current.value;\n      const password = this.passwordEl.current.value;\n\n      if (email.trim().length === 0 || password.trim().length === 0) {\n        return;\n      }\n\n      let requestBody = {\n        query: \"\\n        query {\\n          login(email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\") {\\n            userId\\n            token\\n            tokenExpiration\\n          }\\n        }\\n      \")\n      };\n\n      if (!this.state.isLogin) {\n        requestBody = {\n          query: \"\\n          mutation {\\n            createUser(userInput: {email: \\\"\".concat(email, \"\\\", password: \\\"\").concat(password, \"\\\"}) {\\n              _id\\n              email\\n            }\\n          }\\n        \")\n        };\n      }\n\n      fetch('http://localhost:8000/graphql', {\n        method: 'POST',\n        body: JSON.stringify(requestBody),\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }).then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n\n        return res.json();\n      }).then(resData => {\n        console.log(resData);\n      }).catch(err => {\n        console.log(err);\n      });\n    };\n\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  render() {\n    return React.createElement(\"form\", {\n      className: \"auth-form\",\n      onSubmit: this.submitHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"email\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"E-Mail\"), React.createElement(\"input\", {\n      type: \"email\",\n      id: \"email\",\n      ref: this.emailEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-control\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      ref: this.passwordEl,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"form-actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Submit\"), React.createElement(\"button\", {\n      type: \"button\",\n      onClick: this.switchModeHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"Switch to \", this.state.isLogin ? 'Signup' : 'Login')));\n  }\n\n}\n\nAuthPage.contextType = AuthContext;\nexport default AuthPage;","map":{"version":3,"sources":["/home/arjun/code/react/graphql-react-event-booking/frontend/src/pages/Auth.js"],"names":["React","Component","AuthContext","AuthPage","constructor","props","state","isLogin","switchModeHandler","setState","prevState","submitHandler","event","preventDefault","email","emailEl","current","value","password","passwordEl","trim","length","requestBody","query","fetch","method","body","JSON","stringify","headers","then","res","status","Error","json","resData","console","log","catch","err","createRef","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport AuthContext from '../context/auth-context';\nimport './Auth.css';\n\nclass AuthPage extends Component {\n  state = {\n    isLogin: true\n  };\n\n  static contextType = AuthContext\n  constructor(props) {\n    super(props);\n    this.emailEl = React.createRef();\n    this.passwordEl = React.createRef();\n  }\n\n  switchModeHandler = () => {\n    this.setState(prevState => {\n      return { isLogin: !prevState.isLogin };\n    });\n  };\n\n  submitHandler = event => {\n    event.preventDefault();\n    const email = this.emailEl.current.value;\n    const password = this.passwordEl.current.value;\n\n    if (email.trim().length === 0 || password.trim().length === 0) {\n      return;\n    }\n\n    let requestBody = {\n      query: `\n        query {\n          login(email: \"${email}\", password: \"${password}\") {\n            userId\n            token\n            tokenExpiration\n          }\n        }\n      `\n    };\n\n    if (!this.state.isLogin) {\n      requestBody = {\n        query: `\n          mutation {\n            createUser(userInput: {email: \"${email}\", password: \"${password}\"}) {\n              _id\n              email\n            }\n          }\n        `\n      };\n    }\n\n    fetch('http://localhost:8000/graphql', {\n      method: 'POST',\n      body: JSON.stringify(requestBody),\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    })\n      .then(res => {\n        if (res.status !== 200 && res.status !== 201) {\n          throw new Error('Failed!');\n        }\n        return res.json();\n      })\n      .then(resData => {\n        console.log(resData);\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  render() {\n    return (\n      <form className=\"auth-form\" onSubmit={this.submitHandler}>\n        <div className=\"form-control\">\n          <label htmlFor=\"email\">E-Mail</label>\n          <input type=\"email\" id=\"email\" ref={this.emailEl} />\n        </div>\n        <div className=\"form-control\">\n          <label htmlFor=\"password\">Password</label>\n          <input type=\"password\" id=\"password\" ref={this.passwordEl} />\n        </div>\n        <div className=\"form-actions\">\n          <button type=\"submit\">Submit</button>\n          <button type=\"button\" onClick={this.switchModeHandler}>\n            Switch to {this.state.isLogin ? 'Signup' : 'Login'}\n          </button>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default AuthPage;"]},"metadata":{},"sourceType":"module"}